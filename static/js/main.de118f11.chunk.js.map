{"version":3,"sources":["components/App/App.js","index.js"],"names":["App","state","contacts","id","name","number","filter","handleChange","e","setState","target","value","handleSubmit","evt","preventDefault","contact","uuidv4","prevState","resetForm","this","normalizedFilter","toLowerCase","filteredName","includes","className","onSubmit","type","pattern","title","required","onChange","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAGMA,E,4MACJC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,GACRF,KAAM,GACNC,OAAQ,I,EAGVE,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAON,KAAOI,EAAEE,OAAOC,S,EAI9BC,aAAe,SAAAC,GACbA,EAAIC,iBACJ,IAAMC,EAAU,CACdZ,GAAIa,cACJZ,KAAM,EAAKH,MAAMG,KACjBC,OAAQ,EAAKJ,MAAMI,QAErB,EAAKI,UAAS,SAAAQ,GACZ,MAAO,CACLf,SAAS,GAAD,mBAAMe,EAAUf,UAAhB,CAA0Ba,QAGtC,EAAKG,a,EAGPA,UAAY,WACV,EAAKT,SAAS,CAAEL,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,M,4CAGhD,WACE,MAAiCa,KAAKlB,MAA9BG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAChBc,EAAmBD,KAAKlB,MAAMK,OAAOe,cACrCC,EAAeH,KAAKlB,MAAMC,SAASI,QAAO,SAAAS,GAAO,OACrDA,EAAQX,KAAKiB,cAAcE,SAASH,MAGtC,OACE,sBAAKI,UAAU,MAAf,UACE,2CACA,uBAAMC,SAAUN,KAAKP,aAArB,UACE,yCAEE,uBACEc,KAAK,OACLtB,KAAK,OACLO,MAAOP,EACPuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUX,KAAKZ,kBAInB,2CAEE,uBACEmB,KAAK,MACLtB,KAAK,SACLO,MAAON,EACPsB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUX,KAAKZ,kBAInB,wBAAQmB,KAAK,SAAb,4BAGF,0CAEA,uDACA,uBACEA,KAAK,OACLtB,KAAK,SACLO,MAAOL,EACPqB,QAAQ,yHACRC,MAAM,kcACNE,SAAUX,KAAKZ,eAGjB,6BACGe,EAAaS,KAAI,gBAAG5B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAChB,+BACGD,EADH,KACWC,IADFF,e,GA5FH6B,aAsGHhC,ICpGfiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.de118f11.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '', filter: '' });\n  };\n\n  render() {\n    const { name, number, filter } = this.state;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredName = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n\n        <h1>Contacts</h1>\n\n        <h2>Find contacts by name</h2>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={this.handleChange}\n        />\n\n        <ul>\n          {filteredName.map(({ id, name, number }) => (\n            <li key={id}>\n              {name}: {number}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}